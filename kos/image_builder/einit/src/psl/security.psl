use trusted._

use EDL node.Node

/**
 * Conditional declaration of KLog entities
 * depending on USE_KLOG option
 */
use use_klog._

/*
  Simplest audit rule for debugging

  Usage: include profile to rule body

  request src=EntityName {
    audit trace
    grant()
  }

  makes Klog print any request from EntityName
  Can be used in any rules, not only `request`
*/
audit profile trace = {
    0: {
        base: { kss: [ "denied", "granted" ] },
    },
}

execute src=Einit, dst=node.Node
{
    grant()
}

request src=node.Node, dst=kl.core.Core
{
    grant()
}

response src=kl.core.Core, dst=node.Node
{
    grant()
}

request src=node.Node, dst=kl.VfsNet
{
    grant()
}

response src=kl.VfsNet, dst=node.Node
{
    grant()
}

request src=node.Node, dst=kl.VfsRamFs
{
    grant()
}

response src=kl.VfsRamFs, dst=node.Node
{
    grant()
}

request src=node.Node, dst=kl.TlsEntity
{
    grant()
}

response src=kl.TlsEntity, dst=node.Node
{
    grant()
}

request src=kl.TlsEntity, dst=node.Node
{
    grant()
}

response src=node.Node, dst=kl.TlsEntity
{
    grant()
}

response src=env.Env, dst=node.Node
{
    grant()
}

request src=node.Node, dst=env.Env
{
    grant()
}
